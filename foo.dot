digraph G {
  block0 [ label="block0: int[100]\ A\lint\ length\l\l" ];
  block1 [ label="block1: *start\ of\ method*\l" ];
  block2 [ label="block2: int\ partition\lint\ t\lint\ x\lint\ i\lint\ j\lint\ z\lx\ =\ A[p]\li\ =\ p\ -\ 1\l\lj\ =\ r\ +\ 1\l\lz\ =\ 0\l\l" ];
  block3 [ label="block3: z\ \<\ length\ *\ length\l\l" ];
  block4 [ label="block4: int\ a\lj\ =\ j\ -\ 1\l\la\ =\ 0\l\l" ];
  block6 [ label="block6: a\ \<\ length\l" ];
  block8 [ label="block8: A[j]\ \<=\ x\l" ];
  block11 [ label="block11: \l" ];
  block9 [ label="block9: a\ =\ i\ +\ 1\l\l\l" ];
  block13 [ label="block13: a\ \<\ length\l" ];
  block15 [ label="block15: A[a]\ \>=\ x\l" ];
  block18 [ label="block18: i\ =\ a\l\l" ];
  block16 [ label="block16: i\ \<\ j\l" ];
  block20 [ label="block20: t\ =\ A[i]\lA[i]\ =\ A[j]\lA[j]\ =\ t\lz\ =\ z\ +\ 1\l\l\l" ];
  block21 [ label="block21: return\ j\l\l" ];
  block7 [ label="block7: *end\ of\ method*\l" ];
  block10 [ label="block10: *start\ of\ method*\l" ];
  block14 [ label="block14: void\ main\lint\ temp\lint\ i\llength\ =\ 10\lprintf\(\"creating\ random\ array\ of\ %d\ elements\\n\"\,\ length\)\lsrandom\(17\)\li\ =\ 0\l\l" ];
  block17 [ label="block17: i\ \<\ length\l" ];
  block22 [ label="block22: temp\ =\ random\(\)\l\lA[i]\ =\ temp\li\ =\ i\ +\ 1\l\l\l" ];
  block23 [ label="block23: printf\(\"\\nbefore\ sort\:\\n\"\)\li\ =\ 0\l\l" ];
  block24 [ label="block24: i\ \<\ length\l" ];
  block25 [ label="block25: printf\(\"%d\\n\"\,\ A[i]\)\li\ =\ i\ +\ 1\l\l\l" ];
  block26 [ label="block26: quicksort\(0\,\ length\ -\ 1\l\)\lprintf\(\"\\nafter\ sort\\n\"\)\li\ =\ 0\l\l" ];
  block27 [ label="block27: i\ \<\ length\l" ];
  block28 [ label="block28: printf\(\"%d\\n\"\,\ A[i]\)\li\ =\ i\ +\ 1\l\l\l" ];
  block29 [ label="block29: *for\ escape*\l\l" ];
  block30 [ label="block30: *end\ of\ method*\l" ];
  block31 [ label="block31: *start\ of\ method*\l" ];
  block32 [ label="block32: void\ quicksort\lint\ q\lp\ \<\ r\l" ];
  block33 [ label="block33: q\ =\ partition\(p\,\ r\)\l\lquicksort\(p\,\ q\)\lquicksort\(q\ +\ 1\l\,\ r\)\l\l" ];
  block35 [ label="block35: *if\ escape*\l\l" ];
  block36 [ label="block36: *end\ of\ method*\l" ];
  block34 [ label="block34: *else\ block*\l\l" ];
  block19 [ label="block19: a\ =\ a\ +\ 1\l\l\l" ];
  block12 [ label="block12: j\ =\ j\ -\ 1\l\la\ =\ a\ +\ 1\l\l\l" ];
  block5 [ label="block5: return\ \l\l\l" ];
  block0 -> block1;
  block1 -> block2;
  block2 -> block3;
  block3 -> block4;
  block4 -> block6;
  block6 -> block8;
  block8 -> block11;
  block11 -> block9;
  block9 -> block13;
  block13 -> block15;
  block15 -> block18;
  block18 -> block16;
  block16 -> block20;
  block20 -> block3;
  block16 -> block21;
  block21 -> block7;
  block7 -> block10;
  block10 -> block14;
  block14 -> block17;
  block17 -> block22;
  block22 -> block17;
  block17 -> block23;
  block23 -> block24;
  block24 -> block25;
  block25 -> block24;
  block24 -> block26;
  block26 -> block27;
  block27 -> block28;
  block28 -> block27;
  block27 -> block29;
  block29 -> block30;
  block30 -> block31;
  block31 -> block32;
  block32 -> block33;
  block33 -> block35;
  block35 -> block36;
  block32 -> block34;
  block34 -> block35;
  block15 -> block19;
  block19 -> block13;
  block13 -> block16;
  block8 -> block12;
  block12 -> block6;
  block6 -> block9;
  block3 -> block5;
  block5 -> block7;
}
