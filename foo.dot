digraph G {
  0 [ label="0: int[100]\ A\lint\ length\l" ];
  1 [ label="1: *method\ start*\l" ];
  2 [ label="2: int\ partition\l" ];
  3 [ label="3: *arguments*\lint\ p\lint\ r\l" ];
  4 [ label="4: *variables*\lint\ t\lint\ x\lint\ i\lint\ j\lint\ z\l" ];
  5 [ label="5: x\ =\ A[p]\l" ];
  6 [ label="6: i\ =\ p\ -\ 1\l\l" ];
  7 [ label="7: j\ =\ r\ +\ 1\l\l" ];
  8 [ label="8: *for\ start*\lz\ =\ 0\l" ];
  9 [ label="9: z\ \<\ length\ *\ length\l\l" ];
  10 [ label="10: *variables*\lint\ a\l" ];
  11 [ label="11: j\ =\ j\ -\ 1\l\l" ];
  12 [ label="12: *for\ start*\la\ =\ 0\l" ];
  13 [ label="13: a\ \<\ length\l" ];
  14 [ label="14: *variables*\l" ];
  15 [ label="15: A[j]\ \<=\ x\l" ];
  16 [ label="16: *if\ block*\l" ];
  17 [ label="17: *break*\l" ];
  18 [ label="18: *for\ escape*\l" ];
  19 [ label="19: *for\ start*\la\ =\ i\ +\ 1\l\l" ];
  20 [ label="20: a\ \<\ length\l" ];
  21 [ label="21: *variables*\l" ];
  22 [ label="22: A[a]\ \>=\ x\l" ];
  23 [ label="23: *if\ block*\l" ];
  24 [ label="24: i\ =\ a\l" ];
  25 [ label="25: *break*\l" ];
  26 [ label="26: *for\ escape*\l" ];
  27 [ label="27: i\ \<\ j\l" ];
  28 [ label="28: *if\ block*\l" ];
  29 [ label="29: t\ =\ A[i]\l" ];
  30 [ label="30: A[i]\ =\ A[j]\l" ];
  31 [ label="31: A[j]\ =\ t\l" ];
  32 [ label="32: *if\ escape*\l" ];
  33 [ label="33: z\ +=\ z\ +\ 1\l\l" ];
  34 [ label="34: *else\ block*\l" ];
  35 [ label="35: *return*\l" ];
  36 [ label="36: *method\ end*\l" ];
  37 [ label="37: *method\ start*\l" ];
  38 [ label="38: void\ main\l" ];
  39 [ label="39: *arguments*\l" ];
  40 [ label="40: *variables*\lint\ temp\lint\ i\l" ];
  41 [ label="41: length\ =\ 10\l" ];
  42 [ label="42: printf\(\"creating\ random\ array\ of\ %d\ elements\\n\"\,\ length\)\l" ];
  43 [ label="43: srandom\(17\)\l" ];
  44 [ label="44: *for\ start*\li\ =\ 0\l" ];
  45 [ label="45: i\ \<\ length\l" ];
  46 [ label="46: *variables*\l" ];
  47 [ label="47: temp\ =\ random\(\)\l" ];
  48 [ label="48: A[i]\ =\ temp\l" ];
  49 [ label="49: i\ +=\ i\ +\ 1\l\l" ];
  50 [ label="50: *for\ escape*\l" ];
  51 [ label="51: printf\(\"\\nbefore\ sort\:\\n\"\)\l" ];
  52 [ label="52: *for\ start*\li\ =\ 0\l" ];
  53 [ label="53: i\ \<\ length\l" ];
  54 [ label="54: *variables*\l" ];
  55 [ label="55: printf\(\"%d\\n\"\,\ A[i]\)\l" ];
  56 [ label="56: i\ +=\ i\ +\ 1\l\l" ];
  57 [ label="57: *for\ escape*\l" ];
  58 [ label="58: quicksort\(0\,\ length\ -\ 1\l\)\l" ];
  59 [ label="59: printf\(\"\\nafter\ sort\\n\"\)\l" ];
  60 [ label="60: *for\ start*\li\ =\ 0\l" ];
  61 [ label="61: i\ \<\ length\l" ];
  62 [ label="62: *variables*\l" ];
  63 [ label="63: printf\(\"%d\\n\"\,\ A[i]\)\l" ];
  64 [ label="64: i\ +=\ i\ +\ 1\l\l" ];
  65 [ label="65: *for\ escape*\l" ];
  66 [ label="66: *method\ end*\l" ];
  67 [ label="67: *method\ start*\l" ];
  68 [ label="68: void\ quicksort\l" ];
  69 [ label="69: *arguments*\lint\ p\lint\ r\l" ];
  70 [ label="70: *variables*\lint\ q\l" ];
  71 [ label="71: p\ \<\ r\l" ];
  72 [ label="72: *if\ block*\l" ];
  73 [ label="73: q\ =\ partition\(p\,\ r\)\l" ];
  74 [ label="74: quicksort\(p\,\ q\)\l" ];
  75 [ label="75: quicksort\(q\ +\ 1\l\,\ r\)\l" ];
  76 [ label="76: *if\ escape*\l" ];
  77 [ label="77: *method\ end*\l" ];
  78 [ label="78: *else\ block*\l" ];
  79 [ label="79: *else\ block*\l" ];
  80 [ label="80: *if\ escape*\l" ];
  81 [ label="81: a\ +=\ a\ +\ 1\l\l" ];
  82 [ label="82: *else\ block*\l" ];
  83 [ label="83: *if\ escape*\l" ];
  84 [ label="84: j\ =\ j\ -\ 1\l\l" ];
  85 [ label="85: a\ +=\ a\ +\ 1\l\l" ];
  86 [ label="86: *for\ escape*\l" ];
  87 [ label="87: *return*\l" ];
  0 -> 1;
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 17;
  17 -> 18;
  18 -> 19;
  19 -> 20;
  20 -> 21;
  21 -> 22;
  22 -> 23;
  23 -> 24;
  24 -> 25;
  25 -> 26;
  26 -> 27;
  27 -> 28;
  28 -> 29;
  29 -> 30;
  30 -> 31;
  31 -> 32;
  32 -> 33;
  33 -> 9;
  27 -> 34;
  34 -> 35;
  35 -> 36;
  36 -> 37;
  37 -> 38;
  38 -> 39;
  39 -> 40;
  40 -> 41;
  41 -> 42;
  42 -> 43;
  43 -> 44;
  44 -> 45;
  45 -> 46;
  46 -> 47;
  47 -> 48;
  48 -> 49;
  49 -> 45;
  45 -> 50;
  50 -> 51;
  51 -> 52;
  52 -> 53;
  53 -> 54;
  54 -> 55;
  55 -> 56;
  56 -> 53;
  53 -> 57;
  57 -> 58;
  58 -> 59;
  59 -> 60;
  60 -> 61;
  61 -> 62;
  62 -> 63;
  63 -> 64;
  64 -> 61;
  61 -> 65;
  65 -> 66;
  66 -> 67;
  67 -> 68;
  68 -> 69;
  69 -> 70;
  70 -> 71;
  71 -> 72;
  72 -> 73;
  73 -> 74;
  74 -> 75;
  75 -> 76;
  76 -> 77;
  71 -> 78;
  78 -> 76;
  22 -> 79;
  79 -> 80;
  80 -> 81;
  81 -> 20;
  20 -> 26;
  15 -> 82;
  82 -> 83;
  83 -> 84;
  84 -> 85;
  85 -> 13;
  13 -> 18;
  9 -> 86;
  86 -> 87;
  87 -> 36;
}
