digraph G {
  0 [ label="0: int[100]\ A\lint\ length\lint\ partition\lint\ p\lint\ r\lint\ t\lint\ x\lint\ i\lint\ j\lint\ z\lx\ =\ A[p]\li\ =\ p\ -\ 1\l\lj\ =\ r\ +\ 1\l\lz\ =\ 0\l" ];
  1 [ label="1: z\ \<\ length\ *\ length\l\l" ];
  2 [ label="2: int\ a\lj\ =\ j\ -\ 1\l\la\ =\ 0\l" ];
  3 [ label="3: a\ \<\ length\l" ];
  4 [ label="4: A[j]\ \<=\ x\l" ];
  5 [ label="5: a\ =\ i\ +\ 1\l\l" ];
  6 [ label="6: a\ \<\ length\l" ];
  7 [ label="7: A[a]\ \>=\ x\l" ];
  8 [ label="8: i\ =\ a\l" ];
  9 [ label="9: i\ \<\ j\l" ];
  10 [ label="10: t\ =\ A[i]\lA[i]\ =\ A[j]\lA[j]\ =\ t\lz\ +=\ z\ +\ 1\l\l" ];
  11 [ label="11: void\ main\lint\ temp\lint\ i\llength\ =\ 10\lprintf\(\"creating\ random\ array\ of\ %d\ elements\\n\"\,\ length\)\lsrandom\(17\)\li\ =\ 0\l" ];
  12 [ label="12: i\ \<\ length\l" ];
  13 [ label="13: temp\ =\ random\(\)\lA[i]\ =\ temp\li\ +=\ i\ +\ 1\l\l" ];
  14 [ label="14: printf\(\"\\nbefore\ sort\:\\n\"\)\li\ =\ 0\l" ];
  15 [ label="15: i\ \<\ length\l" ];
  16 [ label="16: printf\(\"%d\\n\"\,\ A[i]\)\li\ +=\ i\ +\ 1\l\l" ];
  17 [ label="17: quicksort\(0\,\ length\ -\ 1\l\)\lprintf\(\"\\nafter\ sort\\n\"\)\li\ =\ 0\l" ];
  18 [ label="18: i\ \<\ length\l" ];
  19 [ label="19: printf\(\"%d\\n\"\,\ A[i]\)\li\ +=\ i\ +\ 1\l\l" ];
  20 [ label="20: void\ quicksort\lint\ p\lint\ r\lint\ q\lp\ \<\ r\l" ];
  21 [ label="21: q\ =\ partition\(p\,\ r\)\lquicksort\(p\,\ q\)\lquicksort\(q\ +\ 1\l\,\ r\)\l" ];
  22 [ label="22: " ];
  23 [ label="23: a\ +=\ a\ +\ 1\l\l" ];
  24 [ label="24: j\ =\ j\ -\ 1\l\la\ +=\ a\ +\ 1\l\l" ];
  0 -> 1;
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 1;
  9 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 12;
  12 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 15;
  15 -> 17;
  17 -> 18;
  18 -> 19;
  19 -> 18;
  18 -> 20;
  20 -> 21;
  21 -> 22;
  20 -> 22;
  7 -> 23;
  23 -> 6;
  6 -> 9;
  4 -> 24;
  24 -> 3;
  3 -> 5;
  1 -> 11;
}
